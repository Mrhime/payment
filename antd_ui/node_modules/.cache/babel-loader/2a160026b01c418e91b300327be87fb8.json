{"ast":null,"code":"var _jsxFileName = \"/home/alex/project/payment/antd_ui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, DatePicker } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [form] = Form.useForm();\n  const [ExpDate] = useState(false);\n  useEffect(() => {\n    form.validateFields(['ExpDate']);\n  }, [ExpDate]);\n  const monthFormat = 'MM/YYYY';\n\n  const onCheck = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Success:', values);\n      await fetch('http://localhost:3000/payment', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"dynamic_rule\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n      name: \"CardNumber\",\n      label: \"CardNumber\",\n      rules: [{\n        required: true,\n        message: 'Please input CardNumber 16 numbers',\n        type: 'number',\n        min: 16,\n        max: 16\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Please CardNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n      name: \"ExpDate\",\n      label: \"ExpDate\",\n      rules: [{\n        required: true,\n        message: 'Please input ExpDate'\n      }],\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        format: monthFormat,\n        picker: \"month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n      name: \"Cvv\",\n      label: \"Cvv\",\n      rules: [{\n        required: true,\n        message: 'Please input Cvv',\n        min: 3,\n        max: 3\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        showCount: true,\n        maxLength: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n      name: \"Amount\",\n      label: \"Amount\",\n      rules: [{\n        required: true,\n        message: 'Please input Amount'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Please Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formTailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: onCheck,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"gc+gh2orM31tXSiobm1t9ulDQW8=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/alex/project/payment/antd_ui/src/App.js"],"names":["React","useState","useEffect","Form","Input","Button","DatePicker","formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","App","form","useForm","ExpDate","validateFields","monthFormat","onCheck","values","console","log","fetch","method","headers","body","JSON","stringify","errorInfo","required","message","type","min","max"],"mappings":"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","sourcesContent":["\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, DatePicker } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4,\n  },\n};\n\nfunction App() {\n  const [form] = Form.useForm();\n  const [ExpDate] = useState(false);\n  useEffect(() => {\n    form.validateFields(['ExpDate']);\n  }, [ExpDate]);\n\n  const monthFormat = 'MM/YYYY';\n\n  const onCheck = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Success:', values);\n       await fetch('http://localhost:3000/payment', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(values)\n        })\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  return (\n      <Form form={form} name=\"dynamic_rule\">\n        <Form.Item\n            {...formItemLayout}\n            name=\"CardNumber\"\n            label=\"CardNumber\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input CardNumber 16 numbers',\n                  type:'number',\n                  min: 16,\n                  max: 16\n              },\n            ]}\n        >\n          <Input placeholder=\"Please CardNumber\" />\n        </Form.Item>\n        <Form.Item\n\n            {...formItemLayout}\n            name=\"ExpDate\"\n            label=\"ExpDate\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input ExpDate',\n\n\n              },\n            ]}\n        >\n\n            <DatePicker  format={monthFormat} picker=\"month\" />\n        </Form.Item>\n\n          <Form.Item\n            {...formItemLayout}\n            name=\"Cvv\"\n            label=\"Cvv\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input Cvv',\n\n                  min: 3,\n                  max: 3\n              },\n            ]}\n        >\n          <Input showCount maxLength={3} />\n        </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            name=\"Amount\"\n            label=\"Amount\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input Amount',\n              },\n            ]}\n        >\n          <Input placeholder=\"Please Amount\" />\n        </Form.Item>\n\n        <Form.Item {...formTailLayout}>\n          <Button type=\"primary\" onClick={onCheck}>\n            Check\n          </Button>\n        </Form.Item>\n      </Form>\n  );\n};\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}