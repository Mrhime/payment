{"ast":null,"code":"var _jsxFileName = \"/home/alex/project/payment/antd_ui/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst formTailLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 8,\n    offset: 4\n  }\n};\n\nconst DynamicRule = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const [checkNick, setCheckNick] = useState(false);\n  useEffect(() => {\n    form.validateFields(['nickname']);\n  }, [checkNick]);\n\n  const onCheckboxChange = e => {\n    setCheckNick(e.target.checked);\n  };\n\n  const onCheck = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Success:', values);\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"dynamic_rule\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"username\",\n        label: \"Name\",\n        rules: [{\n          required: true,\n          message: 'Please input your name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Please input your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"nickname\",\n        label: \"Nickname\",\n        rules: [{\n          required: checkNick,\n          message: 'Please input your nickname'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Please input your nickname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formTailLayout,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checkNick,\n          onChange: onCheckboxChange,\n          children: \"Nickname is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formTailLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: onCheck,\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this), document.getElementById(\"root\"));\n};\n\n_s(DynamicRule, \"g8NVQvz0YHeMB2qLPM57IEfv+DU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = DynamicRule;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicRule\");","map":{"version":3,"sources":["/home/alex/project/payment/antd_ui/src/index.js"],"names":["React","useState","useEffect","ReactDOM","Form","Input","Button","Checkbox","formItemLayout","labelCol","span","wrapperCol","formTailLayout","offset","DynamicRule","form","useForm","checkNick","setCheckNick","validateFields","onCheckboxChange","e","target","checked","onCheck","values","console","log","errorInfo","render","required","message","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nconst formItemLayout = {\n    labelCol: {\n        span: 4,\n    },\n    wrapperCol: {\n        span: 8,\n    },\n};\nconst formTailLayout = {\n    labelCol: {\n        span: 4,\n    },\n    wrapperCol: {\n        span: 8,\n        offset: 4,\n    },\n};\n\nconst DynamicRule = () => {\n    const [form] = Form.useForm();\n    const [checkNick, setCheckNick] = useState(false);\n    useEffect(() => {\n        form.validateFields(['nickname']);\n    }, [checkNick]);\n\n    const onCheckboxChange = (e) => {\n        setCheckNick(e.target.checked);\n    };\n\n    const onCheck = async () => {\n        try {\n            const values = await form.validateFields();\n            console.log('Success:', values);\n        } catch (errorInfo) {\n            console.log('Failed:', errorInfo);\n        }\n    };\n\n\n    ReactDOM.render(\n        <div className=\"App\">\n\n            <Form form={form} name=\"dynamic_rule\">\n                <Form.Item\n                    {...formItemLayout}\n                    name=\"username\"\n                    label=\"Name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your name',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Please input your name\" />\n                </Form.Item>\n                <Form.Item\n                    {...formItemLayout}\n                    name=\"nickname\"\n                    label=\"Nickname\"\n                    rules={[\n                        {\n                            required: checkNick,\n                            message: 'Please input your nickname',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Please input your nickname\" />\n                </Form.Item>\n                <Form.Item {...formTailLayout}>\n                    <Checkbox checked={checkNick} onChange={onCheckboxChange}>\n                        Nickname is required\n                    </Checkbox>\n                </Form.Item>\n                <Form.Item {...formTailLayout}>\n                    <Button type=\"primary\" onClick={onCheck}>\n                        Check\n                    </Button>\n                </Form.Item>\n            </Form>\n           \n        </div>,\n        document.getElementById(\"root\")\n    );\n}\n"]},"metadata":{},"sourceType":"module"}